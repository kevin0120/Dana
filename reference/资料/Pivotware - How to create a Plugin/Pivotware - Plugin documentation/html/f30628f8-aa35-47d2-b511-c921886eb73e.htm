<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How to create a plugin</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="create, start, hmi, parameter" /><meta name="Microsoft.Help.Id" content="f30628f8-aa35-47d2-b511-c921886eb73e" /><meta name="Description" content="This document explains how to create a plugin. Code examples are made with version. It could be easily applied to next versions." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Plugin documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0914e9ea-9584-4bb0-a703-4a6a191745b8.htm" title="Plugin documentation" tocid="roottoc">Plugin documentation</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="0914e9ea-9584-4bb0-a703-4a6a191745b8.htm" title="Welcome to the Plugin Interface Documentation" tocid="0914e9ea-9584-4bb0-a703-4a6a191745b8">Welcome to the Plugin Interface Documentation</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="483a58b1-2899-48bf-8d36-3319e9655eb7.htm" title="Version History" tocid="483a58b1-2899-48bf-8d36-3319e9655eb7">Version History</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="f30628f8-aa35-47d2-b511-c921886eb73e.htm" title="How to create a plugin" tocid="f30628f8-aa35-47d2-b511-c921886eb73e">How to create a plugin</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="caae5e98-a5bb-490e-b751-7d37767104ba.htm" title="FAQ" tocid="caae5e98-a5bb-490e-b751-7d37767104ba">FAQ</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="0fc05e4b-ee66-2d46-1ee5-194510300de9.htm" title="Desoutter.ProcessControl.Plugin.v1.Interface" tocid="0fc05e4b-ee66-2d46-1ee5-194510300de9">Desoutter.ProcessControl.Plugin.v1.Interface</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8cff065b-ee39-97a1-728b-d5d0ef5be5a7.htm" title="Desoutter.ProcessControl.Plugin.v2.Interface" tocid="8cff065b-ee39-97a1-728b-d5d0ef5be5a7">Desoutter.ProcessControl.Plugin.v2.Interface</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>How to create a plugin</h1></td><td class="logoColumn"><img src="../icons/Desoutter.png" /></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>This document explains how to create a plugin. Code examples are made with version. It could be easily applied to next versions.</p></div><h3 class="procedureSubHeading">Procedure to create a basic plugin</h3><div class="subSection"><ol><li><p>Create a solution with a « class library ».</p></li><li><p>Add the following references to your solution:</p><ul><li><p><span class="code">Desoutter.ProcessControl.Plugin.v1.Interface.dll</span></p></li><li><p><span class="code">PresentationFramework</span></p></li><li><p><span class="code">System.Xaml</span></p></li></ul></li><li><p>In the “Project Properties”, select target framework version <span class="code">4.6.2</span> (Plugin API uses .Net Framework 4.6.2).</p></li><li><p>The main class of the project (which can be called “Plugin”) must inherit from <span class="code">Desoutter.ProcessControl.Plugin.v1.Interface.PluginBase</span></p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAEAJAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAEAJAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAEAJAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAEAJAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Desoutter.ProcessControl.Plugin.v1.Interface;
<span class="highlight-keyword">using</span> Desoutter.ProcessControl.Plugin.v1.Interface.AttributeParameter;
<span class="highlight-keyword">using</span> Desoutter.ProcessControl.Plugin.v1.Interface.Model;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Plugin : PluginBase
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAEAJAAA");</script></li><li><p>On this class add the attribute <span class="code">[Plugin]</span>:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAJAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAJAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAJAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAJAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Plugin]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Plugin : PluginBase
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAJAAA");</script></li><li><p>The main class must contain at least the 3 methods below:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAJAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAJAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACAJAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAJAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> FrameworkElement CreateControl()
{
  <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">bool</span> HasToCreateControl()
{
  <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> StepResult ExecuteStep(<span class="highlight-keyword">object</span> parameters)
{
  <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> StepResult { Data = <span class="highlight-literal">"I have done my work successfully!"</span>, IsPassed = <span class="highlight-keyword">true</span> };
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAJAAA");</script></li><li><p>Build your plugin and put it into a sub directory in <span class="code">InfinityPlugins</span> in Fusion directory.</p></li><li><p>Fusion is ready to use your new plugin in a new process.</p></li></ol></div><h3 class="procedureSubHeading">Get value from configuration</h3><div class="subSection"><ol><li><p>Create a class</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAIAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAIAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAIAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAIAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Desoutter.ProcessControl.Plugin.v1.Interface.AttributeParameter;

<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Parameters
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAIAAA");</script></li><li><p>Add an attribute [PluginParameters]</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACAIAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAIAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAACAIAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAIAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[PluginParameters]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Parameters
{
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAIAAA");</script></li><li><p>Add some parameters (string type) and tag them with</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAIAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAIAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABAIAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABAIAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[PluginParameter(“Parameter name <span class="highlight-keyword">in</span> Fusion”, “My fusion tooltip”)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> MyParameter {<span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>;}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAIAAA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAIAAA_tab1" class="codeSnippetContainerTabSingle">Complete example (Parameters class from ScreenAlertPlugin)</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAIAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAIAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAIAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[PluginParameters]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Parameters
{
  [PluginParameter(<span class="highlight-literal">"Info message"</span>, <span class="highlight-literal">"Display a specific message"</span>)]
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> InfoMessage { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

  [PluginParameter(<span class="highlight-literal">"Error message"</span>, <span class="highlight-literal">"Display a specific message"</span>)]
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> ErrorMessage { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

  [PluginParameter(<span class="highlight-literal">"Warning message"</span>, <span class="highlight-literal">"Display a specific message"</span>)]
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> WarningMessage { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAIAAA");</script></li><li><p>You can now cast your parameters in <span class="code">ExecuteStep()</span>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAAIAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAAIAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAAIAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAAIAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> StepResult ExecuteStep(<span class="highlight-keyword">object</span> parameters)
{
  <span class="highlight-keyword">var</span> param = parameters <span class="highlight-keyword">as</span> Parameters;

  <span class="highlight-comment">// I can access to the parameters sent to the plugin through param.</span>

  <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> StepResult { Data = <span class="highlight-literal">"I have done my work successfully!"</span>, IsPassed = <span class="highlight-keyword">true</span> };
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAAIAAA");</script></li></ol></div><h3 class="procedureSubHeading">Add an HMI to the plugin</h3><div class="subSection"><ol><li><p>Change the return of <span class="code">HasToCreateControl()</span> to <span class="code">true</span></p></li><li><p><span class="code">CreateControl()</span> returns a new instance of the interface. User interface can be written with WPF or WinForm.
            It is called only once in plugin's life.</p></li></ol></div><h3 class="procedureSubHeading">Access to Services provided by the API</h3><div class="subSection"><ul><li><p><span class="code">PluginBase</span> provides an access to services through <span class="code">InfinityService</span> property.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAAGAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> StepResult ExecuteStep(<span class="highlight-keyword">object</span> parameters)
{
  <span class="highlight-comment">// Display the Infinity keyboard.</span>
  <span class="highlight-comment">// The await keyword is necessary to all services which return a result.</span>
  <span class="highlight-keyword">var</span> userInput = <span class="highlight-keyword">await</span> InfinityService.DisplayKeyboardAsync();

  <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> StepResult { Data = <span class="highlight-literal">"The user entered: "</span> + userInput, IsPassed = <span class="highlight-keyword">true</span> };
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAAGAAA");</script></li></ul></div><h3 class="procedureSubHeading">Good to know</h3><div class="subSection"><ul><li><p>A specific workspace is created by Infinity to store data. This directory is never removed by Infinity. There is a limit of 200Mb per plugin.</p></li><li><p>This document is written with C# language. In Visual Basic attributes use <span class="code">&lt; &gt;</span> couple instead of <span class="code">[ ]</span>.</p></li><li><p>UI is created on the UI thread. It is possible that you need to modify the UI without user action (when ExecuteStep is called for example). To modify UI safely you can use:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAFAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAFAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAADAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Application.Current.Dispatcher.Invoke(() =&gt;
{
  <span class="highlight-comment">// Modify UI here</span>
});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAFAAA");</script></li><li><p>
              To facilitate your developments you can add a similar command in build event, post-build:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACAFAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABACAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABACAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">xcopy</span> <span class="highlight-literal">"$(TargetDir)*"</span> <span class="highlight-literal">"C:\Pivotware\Plugins\$(TargetFileName)\"</span> /y</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACAFAAA");</script><p>This publishes the plugin into Infinity.</p></li><li><p>Have a look at <span class="code">PluginBase</span> class. You can access to some paths like the working directory or get informed when the step is skipped by the user on Infinity.
          </p></li><li><p>If the step is skipped, all <span class="code">async</span> methods of the API will return a default value. The plugin is informed before of the skipped before getting waiting results.</p></li></ul></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>